/****************************************************************************************
 * Copyright (C) 2012 Lucien XU <sfietkonstantin@free.fr>                               *
 *                                                                                      *
 * This program is free software; you can redistribute it and/or modify it under        *
 * the terms of the GNU General Public License as published by the Free Software        *
 * Foundation; either version 3 of the License, or (at your option) any later           *
 * version.                                                                             *
 *                                                                                      *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY      *
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A      *
 * PARTICULAR PURPOSE. See the GNU General Public License for more details.             *
 *                                                                                      *
 * You should have received a copy of the GNU General Public License along with         *
 * this program.  If not, see <http://www.gnu.org/licenses/>.                           *
 ****************************************************************************************/

#ifndef QFB_POST_H
#define QFB_POST_H

/**
 * @file post.h
 * @brief Definition of QFB::Post
 */

#include "object.h"

#include <QtCore/QDateTime>
#include <QtCore/QUrl>

namespace QFB
{

class NamedObject;
/**
 * @brief An user
 *
 * This class represents an post in Facebook.
 * Extending QFB::Object, it contains a lot of properties
 * that can be accessed through
 * - from()
 * - to()
 * - message()
 * - picture()
 * - link()
 * - name()
 * - caption()
 * - description()
 * - source()
 * - icon()
 * - type()
 * - story()
 * - objectId()
 * - createdTime()
 * - updatedTime()
 *
 * Some of these fields might not be set, because of
 * users hiding them in their settings, or because of
 * missing permissions.
 *
 * @section missing Missing properties
 *
 * Some fields such as message_tags, place, properties,
 * actions, privacy, likes, place, story_tags,
 * with_tags, comments, application, include_hidden
 * are not yet implemented.
 *
 * @see QFB::Property
 */
class QFBBASE_EXPORT Post: public Object
{
    Q_OBJECT
    /**
     * @short Information about the user who posted the message
     */
    Q_PROPERTY(QFB::NamedObject * from READ from CONSTANT)
    /**
     * @short Profiles mentioned or targeted in this post
     */
    Q_PROPERTY(QVariantList to READ toVariant CONSTANT)
    /**
     * @short The message
     */
    Q_PROPERTY(QString message READ message CONSTANT)
    /// @todo message_tags
    /// @todo place
    /**
     * @short If available, a link to the picture included with this post
     */
    Q_PROPERTY(QUrl picture READ picture CONSTANT)
    /**
     * @short The link attached to this post
     */
    Q_PROPERTY(QUrl link READ link CONSTANT)
    /**
     * @short The name of the link
     */
    Q_PROPERTY(QString name READ name CONSTANT)
    /**
     * @short The caption of the link
     *
     * It should aappears beneath the link name.
     */
    Q_PROPERTY(QString caption READ caption CONSTANT)
    /**
     * @short A description of the link
     *
     * It should appears beneath the link caption.
     */
    Q_PROPERTY(QString description READ description CONSTANT)
    /**
     * @short A URL to a Flash movie or video file to be embedded within the post
     */
    Q_PROPERTY(QUrl source READ source CONSTANT)
    /// @todo properties
    /**
     * @short A link to an icon representing the type of this post
     */
    Q_PROPERTY(QUrl icon READ icon CONSTANT)
    /// @todo actions
    /// @todo privacy
    /// @todo do a better type
    /**
     * @short A string indicating the type for this post
     *
     * It can be a link, photo, video, etc.
     */
    Q_PROPERTY(QString type READ type CONSTANT)
    /// @todo likes
    /// @todo place
    /**
     * @short Text of stories not intentionally generated by users
     *
     * It can be, for example, a story generated when two users become friends; you must have the
     * "Include recent activity stories" migration enabled in your app to retrieve these stories.
     */
    Q_PROPERTY(QString story READ story CONSTANT)
    /// @todo story_tags
    /// @todo with_tags
    /// @todo comments
    /**
     * @short The Facebook object id for an uploaded photo or video in a post
     */
    Q_PROPERTY(QString objectId READ objectId CONSTANT)
    /// @todo application
    /**
     * @short The time the post was initially published
     */
    Q_PROPERTY(QDateTime createdTime READ createdTime CONSTANT)
    /**
     * @short The time of the last comment on this post
     */
    Q_PROPERTY(QDateTime updatedTime READ updatedTime CONSTANT)
    /// @todo include_hidden
public:
    enum ObjectType {
//        Checkin,

    };

    /**
     * @brief Invalid constructor
     * @param parent parent object.
     */
    explicit Post(QObject *parent = 0);
    /**
     * @brief Default constructor
     * @param propertiesMap properties.
     * @param parent parent object.
     */
    explicit Post(const PropertiesMap propertiesMap, QObject *parent = 0);
    /**
     * @brief From
     * @return from.
     */
    NamedObject * from() const;
    /**
     * @brief To as a variant
     *
     * This method is used to transfer information to
     * a QML context. It returns the list of mentionned people
     * as a list of variant.
     *
     * @return to.
     */
    QVariantList toVariant() const;
    /**
     * @brief To
     * @return to.
     */
    QList<NamedObject *> to() const;
    /**
     * @brief Message
     * @return message.
     */
    QString message() const;
    /**
     * @brief Picture
     * @return picture.
     */
    QUrl picture() const;
    /**
     * @brief Link
     * @return link.
     */
    QUrl link() const;
    /**
     * @brief Name
     * @return name.
     */
    QString name() const;
    /**
     * @brief Caption
     * @return caption.
     */
    QString caption() const;
    /**
     * @brief Description
     * @return description.
     */
    QString description() const;
    /**
     * @brief Source
     * @return source.
     */
    QUrl source() const;
    /**
     * @brief Icon
     * @return icon.
     */
    QUrl icon() const;
    /**
     * @brief Type
     * @return type.
     */
    QString type() const;
    /**
     * @brief Story
     * @return story.
     */
    QString story() const;
    /**
     * @brief Object id
     * @return object id.
     */
    QString objectId() const;
    /**
     * @brief Created time
     * @return created time.
     */
    QDateTime createdTime() const;
    /**
     * @brief Updated time
     * @return updated time.
     */
    QDateTime updatedTime() const;
private:
    Q_DECLARE_PRIVATE(Object)
};

}

Q_DECLARE_METATYPE(QFB::Post *)

#endif // QFB_POST_H
